# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  IMAGE_URL: legendlime/employeeservice-oauth2
  IMAGE_TAG: 0.2-SNAPSHOT
  JAR_NAME: employeeservice-oauth2-0.2-SNAPSHOT.jar
  BASE_DIR: EmployeeService-OAuth2
  DOCKERFILE: Dockerfile-github

jobs:
  build:
    name: Java 11 clean compile and package without testing
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Build with Maven
      run: mvn -DskipTests -B clean package --file ${{ env.BASE_DIR }}/pom.xml
    - name: Upload Maven build artifact
      uses: actions/upload-artifact@v1
      with:
        name: artifact
        path: ${{ env.BASE_DIR }}/target/${{ env.JAR_NAME }}
        
  deploy:
    name: Build docker image and push to docker hub
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - uses: actions/checkout@v2
    - name: Download Maven build artifact
      uses: actions/download-artifact@v1
      with:
        name: artifact
    - name: Move Docker Image
      run: |        
        mkdir -p ${{ env.BASE_DIR }}/target
        mv artifact/${{ env.JAR_NAME }} ${{ env.BASE_DIR }}/target
    - name: Build Docker Image
      uses: whoan/docker-build-with-cache-action@v5
      with:
        username: "${{ secrets.DOCKER_HUB_USER }}"
        password: "${{ secrets.DOCKER_HUB_PWD }}"
        image_name: ${{ env.IMAGE_URL }}
        image_tag: ${{ env.IMAGE_TAG }}
        context: ./${{ env.BASE_DIR }}
        dockerfile: ${{ env.DOCKERFILE }}
  
